// En: ui/viewmodel/WeatherDecisionViewModel.kt
package com.example.openmeteodemo.ui.viewmodel

import androidx.lifecycle.ViewModel
import com.example.openmeteodemo.data.model.*

class WeatherDecisionViewModel : ViewModel() {

    fun procesarDatosReales(weatherResponse: WeatherResponse?): DecisionesClima? {
        if (weatherResponse == null) return null

        val current = weatherResponse.currentWeather

        return DecisionesClima(
            recomendaciones = getRecomendacionesFromWeatherCode(
                current.weathercode,
                current.isDay,
                current.temperature,
                current.windspeed
            ),
            alertas = getAlertasFromCurrentWeather(current),
            datosUtilizados = listOf(
                "Weather Code: ${current.weathercode}",
                "Temperatura: ${current.temperature}¬∞C",
                "Viento: ${current.windspeed} km/h",
                if (current.isDay == 1) "Es de d√≠a" else "Es de noche"
            )
        )
    }

    private fun getRecomendacionesFromWeatherCode(
        weathercode: Int,
        isDay: Int,
        temperatura: Double,
        viento: Double
    ): List<String> {
        val recomendaciones = mutableListOf<String>()

        when (weathercode) {
            0, 1, 2 -> {
                recomendaciones.add("üåû Buen d√≠a para actividades al aire libre")
                if (isDay == 1) {
                    recomendaciones.add("‚òÄÔ∏è Condiciones √≥ptimas para labores de campo")
                    recomendaciones.add("‚úÖ Buen momento para aplicaciones foliares")
                }
            }
            3 -> {
                recomendaciones.add("‚õÖ D√≠a nublado - buen momento para trasplantes")
                recomendaciones.add("üíß Menor evaporaci√≥n - reducir riego")
            }
            45, 48 -> {
                recomendaciones.add("üå´Ô∏è Conducir con precauci√≥n - visibilidad reducida")
                recomendaciones.add("‚ö†Ô∏è Alta humedad - monitorear cultivos sensibles")
            }
            in 51..57 -> {
                recomendaciones.add("üå¶Ô∏è Llevar paraguas o impermeable")
                recomendaciones.add("üíß Precipitaci√≥n leve - beneficiosa para plantas")
                recomendaciones.add("‚è∏Ô∏è Postergar aplicaciones de productos")
            }
            in 61..67 -> {
                recomendaciones.add("üåßÔ∏è Evitar actividades exteriores")
                recomendaciones.add("üöó Conducir con precauci√≥n - piso mojado")
                recomendaciones.add("üö´ Alto riesgo de lavado de nutrientes")
            }
            in 95..99 -> {
                recomendaciones.add("‚õàÔ∏è ALERTA: Buscar refugio inmediatamente")
                recomendaciones.add("üîå Desconectar equipos el√©ctricos")
                recomendaciones.add("üö® Suspender todas las actividades de campo")
            }
        }

        when {
            temperatura > 35.0 -> {
                recomendaciones.add("üå°Ô∏è Temperatura alta - riesgo de estr√©s t√©rmico en cultivos")
                recomendaciones.add("üí¶ Aumentar frecuencia de riego")
            }
            temperatura < 10.0 -> {
                recomendaciones.add("‚ùÑÔ∏è Temperatura baja - proteger cultivos sensibles")
                recomendaciones.add("üè† Considerar cubiertas protectoras")
            }
        }

        if (viento > 25.0) {
            recomendaciones.add("üí® Vientos fuertes - asegurar estructuras y cultivos altos")
        }

        return recomendaciones
    }

    private fun getAlertasFromCurrentWeather(current: CurrentWeather): List<Alerta> {
        val alertas = mutableListOf<Alerta>()

        when {
            current.temperature > 38.0 -> alertas.add(
                Alerta(
                    "üå°Ô∏è Calor extremo",
                    "Temperatura muy alta - riesgo para cultivos y personas",
                    "ALTA"
                )
            )
            current.temperature < 5.0 -> alertas.add(
                Alerta(
                    "‚ùÑÔ∏è Fr√≠o intenso",
                    "Temperatura muy baja - proteger cultivos sensibles",
                    "MEDIA"
                )
            )
        }

        if (current.windspeed > 30.0) {
            alertas.add(
                Alerta(
                    "üí® Vientos fuertes",
                    "Vientos intensos pueden da√±ar cultivos y estructuras",
                    "MEDIA"
                )
            )
        }

        when (current.weathercode) {
            in 95..99 -> alertas.add(
                Alerta(
                    "‚õàÔ∏è Tormenta el√©ctrica",
                    "Tormenta severa - buscar refugio seguro inmediatamente",
                    "CR√çTICA"
                )
            )
            in 71..77 -> alertas.add(
                Alerta(
                    "‚ùÑÔ∏è Condiciones inusuales",
                    "Evento clim√°tico at√≠pico para la regi√≥n",
                    "MEDIA"
                )
            )
        }

        return alertas
    }
}